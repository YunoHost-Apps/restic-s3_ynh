#!/bin/bash
LOCK_FILE=/tmp/__APP__-check.lock
EXIT_PROPERLY() {
  echo -e "\e[91m \e[1m"    # Shell in light red bold
  echo -e "!!\n  Caught an interruption signal,  removing lock file...\n!!"
  echo -e "\e[22m"    # Remove bold

  rm $LOCK_FILE
  exit 1
}
trap EXIT_PROPERLY 1 2 3 6 15
if [ -f "$LOCK_FILE" ];then
  echo "Check already launched by process $(grep '.*' $LOCK_FILE), canceling this one" >&2
  exit 1
fi
echo $$ > "$LOCK_FILE"

CHECK_READ_DATA=${1:-0}

# Check system part conf
conf=$(sudo /usr/bin/yunohost app setting __APP__ conf)
if [ $conf -eq 1 ];then
  sudo __INSTALL_DIR__/check_method auto_conf ${CHECK_READ_DATA}
fi

# Check system data
data=$(sudo /usr/bin/yunohost app setting __APP__ data)
if [ $data -eq 1 ];then
  sudo __INSTALL_DIR__/check_method auto_data ${CHECK_READ_DATA}
fi

# Check all apps independently
apps=$(sudo /usr/bin/yunohost app setting __APP__ apps)
for app in $(sudo /usr/bin/find /etc/yunohost/apps -name backup | cut -d / -f 5); do
  check_app=false
  for selected_app in $(echo $apps | tr "," " ");do
    if [[ "$selected_app" == "$app" ]] || [ "$apps" = "all" ]; then
      check_app=true
      break
    fi
  done
  
  if [ "$check_app" == "true" ];then
    sudo __INSTALL_DIR__/check_method auto_${app} ${CHECK_READ_DATA}
  fi
done
rm "$LOCK_FILE"
